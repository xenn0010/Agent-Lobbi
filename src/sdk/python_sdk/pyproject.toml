[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "agent-lobbi-sdk"
version = "1.0.2"
authors = [
    { name="Agent Lobbi Team", email="support@agentlobby.com" },
]
description = "Production-ready Python SDK for the Agent Lobbi multi-agent collaboration platform"
readme = "README.md"
license = { text = "Commercial" }
requires-python = ">=3.8"
keywords = ["ai", "agents", "collaboration", "multi-agent", "automation", "sdk"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: Other/Proprietary License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: System :: Distributed Computing",
]
dependencies = [
    "websockets>=11.0.0",
    "httpx>=0.24.0",
    "PyYAML>=6.0.0",
    "pydantic>=2.0.0",
    "asyncio-mqtt>=0.13.0",
    "cryptography>=41.0.0",
    "python-dotenv>=1.0.0",
    "click>=8.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
docs = [
    "mkdocs>=1.4.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.20.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "aioresponses>=0.7.0",
]

[project.urls]
"Homepage" = "https://github.com/agent-lobbi/agent-lobbi"
"Documentation" = "https://docs.agentlobbi.com"
"Repository" = "https://github.com/agent-lobbi/agent-lobbi"
"Bug Tracker" = "https://github.com/agent-lobbi/agent-lobbi/issues"
"Changelog" = "https://github.com/agent-lobbi/agent-lobbi/blob/main/CHANGELOG.md"

[project.scripts]
agent-lobbi = "python_sdk.cli:main"

# Package configuration
[tool.hatch.build.targets.wheel]
packages = ["python_sdk"]

[tool.hatch.build.targets.sdist]
include = [
    "/python_sdk",
    "/README.md",
    "/LICENSE",
    "/CHANGELOG.md",
]

# Development tools configuration
[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["python_sdk"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["python_sdk"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 